buildscript {
    ext.kotlin_version = '1.3.30' // Required for Kotlin integration
    ext.spring_boot_version = '2.0.1.RELEASE'
    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version" // Required for Kotlin integration
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version" // See https://kotlinlang.org/docs/reference/compiler-plugins.html#kotlin-spring-compiler-plugin
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_version"
        classpath "org.jetbrains.kotlin:kotlin-maven-noarg:$kotlin_version"
    }
}

allprojects {        //Applies dependencies and configs to submodules

    apply plugin: 'kotlin' // Required for Kotlin integration
    apply plugin: "kotlin-spring"
    // See https://kotlinlang.org/docs/reference/compiler-plugins.html#kotlin-spring-compiler-plugin
    apply plugin: 'org.springframework.boot'
    apply plugin: 'application'

    group = 'com.gil'
    version = '0.0.1-SNAPSHOT'

    jar {
        baseName = 'gil-kotlin-rest-service'
//    version = '0.1.0'
    }

    repositories {
        jcenter()
    }

    dependencies {
        compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version" // Required for Kotlin integration
//        compile("org.springframework.boot:spring-boot-starter-web:$spring_boot_version") {
//        exclude module: "spring-boot-starter-tomcat"
//        }

        
        compile group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: kotlin_version
        
//        testCompile group: 'com.github.tomakehurst', name: 'wiremock', version: '1.58' //TODO complete this
//    testCompile('org.springframework.boot:spring-boot-starter-test:2.0.0.RELEASE')
        testCompile("org.springframework.boot:spring-boot-starter-test:$spring_boot_version")

        compile ('com.fasterxml.jackson.core:jackson-databind:2.7.4'){
            exclude module: "jackson-core"
            exclude module: "jackson-annotations"
        }
        compile("org.springframework.boot:spring-boot-starter-web:$spring_boot_version")
        compile ('com.fasterxml.jackson.core:jackson-core:2.7.4')
        compile ('com.fasterxml.jackson.core:jackson-annotations:2.7.4')

        compileOnly('org.projectlombok:lombok:1.16.20')
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version" // Required for Kotlin integration
    compile("org.springframework.boot:spring-boot-starter-web:$spring_boot_version") {
        exclude module: "spring-boot-starter-json"
    }

    compile ('io.jsonwebtoken:jjwt:0.7.0') {
        exclude module: "jackson-databind"
    }
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-jetty', version: '2.1.3.RELEASE'

    testCompile('org.awaitility:awaitility:3.1.6')
    compile group: "org.springframework.boot", name: "spring-boot-starter-security", version: "$spring_boot_version"

//    For @Sql 
    testCompile ('org.springframework.boot:spring-boot-starter-jdbc:+')
    testCompile group: 'org.hsqldb', name: 'hsqldb', version: '2.3.2'

}
bootRun {
    mainClassName = 'Application'
}